{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/interceptors/http-error.interceptor.ts","./src/app/interceptors/jwt.interceptor.ts","./src/app/interceptors/loader.interceptor.ts","./src/app/loader/loader.component.ts","./src/app/loader/loader.service.ts","./src/app/shared/directive/only-number.directive.ts","./src/app/shared/guards/auth.guard.ts","./src/app/shared/guards/index.ts","./src/app/shared/services/api-urls.service.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {AuthGuard} from './shared/guards';\n\nconst routes: Routes = [\n    {\n        path: '',\n        canActivate: [AuthGuard],\n        loadChildren: () => import('./home/home.module').then(m => m.HomeModule),\n    },\n    {\n        path: 'auth',\n        loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule),\n    },\n    {path: '**', redirectTo: ''}\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {relativeLinkResolution: 'legacy'})],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgModule, APP_INITIALIZER} from '@angular/core';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport {SharedModule} from './shared/shared.module';\n\nimport {AppComponent} from './app.component';\nimport {CatchErrorInterceptor} from './interceptors/http-error.interceptor';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {NgbPaginationModule} from '@ng-bootstrap/ng-bootstrap';\nimport {JwtInterceptor} from \"@app/interceptors/jwt.interceptor\";\nimport {LoaderInterceptor} from \"@app/interceptors/loader.interceptor\";\nimport {LoaderComponent} from \"@app/loader/loader.component\";\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\n\n@NgModule({\n    imports: [\n        BrowserAnimationsModule,\n        HttpClientModule,\n        SharedModule,\n        AppRoutingModule,\n        NgbPaginationModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatFormFieldModule,\n        FlexLayoutModule\n    ],\n    declarations: [\n        AppComponent,\n        LoaderComponent,\n    ],\n    providers: [\n        {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n        {provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true},\n        {provide: HTTP_INTERCEPTORS, useClass: CatchErrorInterceptor, multi: true},\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class CatchErrorInterceptor implements HttpInterceptor {\n  constructor(private router: Router) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto logout if 401 response returned from api\n        // @ts-ignore\n        localStorage.clear();\n        this.router.navigate(['/auth/login']);\n      }\n      const error = err.error || err.statusText;\n      return throwError(error);\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"@app/shared/services/auth.service\";\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser = this.authService.currentUserValue;\n    if (currentUser && currentUser.token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`,\n        },\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {LoaderService} from \"@app/loader/loader.service\";\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n\n  private requests: HttpRequest<any>[] = [];\n\n  constructor(private loaderService: LoaderService) { }\n\n  // tslint:disable-next-line:typedef\n  removeRequest(req: HttpRequest<any>) {\n    const i = this.requests.indexOf(req);\n    if (i >= 0) {\n      this.requests.splice(i, 1);\n    }\n    this.loaderService.isLoading.next(this.requests.length > 0);\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    this.requests.push(req);\n\n    // console.log(\"No of requests--->\" + this.requests.length);\n\n    this.loaderService.isLoading.next(true);\n    return Observable.create((observer: any) => {\n      const subscription = next.handle(req)\n          .subscribe(\n              event => {\n                if (event instanceof HttpResponse) {\n                  // console.log('error' + req);\n                  this.removeRequest(req);\n                  observer.next(event);\n                }\n              },\n              err => {\n                // console.log('error===>' + err);\n                this.removeRequest(req);\n                observer.error(err);\n              },\n              () => {\n                this.removeRequest(req);\n                observer.complete();\n              });\n      // remove request from queue when cancelled\n      return () => {\n        this.removeRequest(req);\n        subscription.unsubscribe();\n      };\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {LoaderService} from \"@app/loader/loader.service\";\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  public loading: boolean | undefined;\n\n  constructor(private loaderService: LoaderService) {\n    this.loaderService.isLoading.subscribe((v) => {\n      this.loading = v;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  public isLoading = new BehaviorSubject(false);\n  constructor() { }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Directive({\n  selector: '[onlyNumber]',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => OnlyNumberDirective),\n    multi: true\n  }]\n})\nexport class OnlyNumberDirective implements ControlValueAccessor {\n  private onChange!: (val: string) => void;\n  private onTouched!: () => void;\n  private value!: string;\n\n  constructor(\n      private elementRef: ElementRef,\n      private renderer: Renderer2\n  ) {\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onInputChange(value: string) {\n    const filteredValue: string = filterValue(value);\n    this.updateTextInput(filteredValue, this.value !== filteredValue);\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    this.onTouched();\n  }\n\n  private updateTextInput(value: string, propagateChange: boolean) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', value);\n    if (propagateChange) {\n      this.onChange(value);\n    }\n    this.value = value;\n  }\n\n  // ControlValueAccessor Interface\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  writeValue(value: any): void {\n    value = value ? String(value) : '';\n    this.updateTextInput(value, false);\n  }\n}\n\nfunction filterValue(value: any): string {\n  return value.replace(/[^0-9]*/g, '');\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n    RouterStateSnapshot,\n} from '@angular/router';\nimport { AuthService } from '@app/shared/services/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(private router: Router, private authService: AuthService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any {\n        const currentAccessToken = this.authService.currentUserValue;\n        if (currentAccessToken) {\n            if (this.authService.isAuthenticated()) {\n                return true;\n            }\n        } else {\n            this.router.navigate(['/auth'], {\n                queryParams: { returnUrl: state.url },\n            });\n        }\n        this.router.navigate(['/auth'], { queryParams: { returnUrl: state.url } });\n        return true;\n    }\n}\n","export * from './auth.guard';\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiUrlsService {\n  // mainUrl = environment.testPath;\n  mainUrl = \"http://localhost:3000\";\n\n  getCurrentUser = 'api/v1/user/me';\n  getAllRoutes = '/api/v1/fareconfig/getFareList';\n  getSlabs = '/api/v1/slab/getSlabs';\n  getAllSlabs = '/api/v1/slab/getAll';\n  saveRoute = '/api/v1/fareconfig/createFareConfig';\n  updateRoute = '/api/v1/fareconfig/updateFareConfig/';\n  refreshData = '/api/v1/rateConfig/refreshdata';\n  saveSlab = '/api/v1/rateConfig/addRateConfig';\n  updateSlab = '/api/v1/rateConfig/updateRateConfig/';\n  getAllLogs = '/api/v1/logs/getAll';\n\n  //find mobile number and send OTP\n  sendOtp = '/api/v1/auth/sendOTP/'\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiUrlsService } from '@app/shared/services/api-urls.service';\nimport { map } from 'rxjs/operators';\n// import Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private loggedUserSub: BehaviorSubject<any>;\n  public currentUser: Observable<any>;\n\n  constructor(private http: HttpClient, private apiUrls: ApiUrlsService) {\n    this.loggedUserSub = new BehaviorSubject<any>(\n      JSON.parse(localStorage.getItem('loggedUser') as string)\n    );\n    this.currentUser = this.loggedUserSub.asObservable();\n  }\n\n  public get currentUserValue(): any {\n    return this.loggedUserSub.value;\n  }\n\n  public isAuthenticated(): string | null {\n    return localStorage.getItem('loggedUser');\n  }\n\n  logIn(contactNumber: string, loginOtp: string) {\n    return this.http\n      .post<any>(this.apiUrls.mainUrl + '/api/v1/auth/otpLogin', {contactNumber, loginOtp,}).pipe(map(response => {\n          if (response) {\n            // Swal.fire('Success', 'Login Success', 'success');\n            localStorage.setItem('loggedUser', JSON.stringify(response));\n            this.loggedUserSub.next(response);\n          }\n          return response;\n        })\n      );\n  }\n\n  logOut(): void {\n    localStorage.clear();\n    this.loggedUserSub.next(null);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { OnlyNumberDirective } from './directive/only-number.directive';\n\n@NgModule({\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatTreeModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatProgressBarModule,\n    OnlyNumberDirective,\n  ],\n  declarations: [\n    OnlyNumberDirective\n  ],\n})\nexport class SharedModule {}\n","export const environment = {\n  production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}